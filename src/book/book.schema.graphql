schema {
    query: Query,
    mutation: Mutation
}

type Query {
    getBook(id: ID!): Book # возвращает null если ничего не нашло

    # поиск нечувствительный к регистру
    # должен поддерживать like синтаксис
    # getBooks() возвращает все книги
    # getBooks(title: "Art of %") возвращает книги начинающиеся с 'Art of'
    getBooks(title: String): [Book!]!
}

type Mutation {
    createBook(book: BookInput!): Book!
    addAuthor(bookId: ID!, authorId: ID!): Book!

    deleteBook(id: ID!): Int! # возвращает количество удаленных записей (0 или 1)
}

type Book {
    id: ID!
    title: String!
    authors: [Author!]!
}

input BookInput {
    title: String!
    authorIds: [ID!]!
}
